// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:

    // Condition for A
    Not(in=sel[0], out=Notsel0);
    Not(in=sel[1], out=Notsel1);
    And(a=Notsel0, b=Notsel1, out=ConditionA);

    // A bus
    And16(
        a=a[0..15],
        b[0]=ConditionA,
        b[1]=ConditionA,
        b[2]=ConditionA,
        b[3]=ConditionA,
        b[4]=ConditionA,
        b[5]=ConditionA,
        b[6]=ConditionA,
        b[7]=ConditionA,
        b[8]=ConditionA,
        b[9]=ConditionA,
        b[10]=ConditionA,
        b[11]=ConditionA,
        b[12]=ConditionA,
        b[13]=ConditionA,
        b[14]=ConditionA,
        b[15]=ConditionA,
        out=ABus);

    
    // Condition for B
    And(a=sel[0], b=Notsel1, out=ConditionB);

    // B bus
    And16(
        a=b[0..15],
        b[0]=ConditionB,
        b[1]=ConditionB,
        b[2]=ConditionB,
        b[3]=ConditionB,
        b[4]=ConditionB,
        b[5]=ConditionB,
        b[6]=ConditionB,
        b[7]=ConditionB,
        b[8]=ConditionB,
        b[9]=ConditionB,
        b[10]=ConditionB,
        b[11]=ConditionB,
        b[12]=ConditionB,
        b[13]=ConditionB,
        b[14]=ConditionB,
        b[15]=ConditionB,
        out=BBus);

    // Condition for C
    And(a=Notsel0, b=sel[1], out=ConditionC);

    // C Bus
    And16(
        a=c[0..15],
        b[0]=ConditionC,
        b[1]=ConditionC,
        b[2]=ConditionC,
        b[3]=ConditionC,
        b[4]=ConditionC,
        b[5]=ConditionC,
        b[6]=ConditionC,
        b[7]=ConditionC,
        b[8]=ConditionC,
        b[9]=ConditionC,
        b[10]=ConditionC,
        b[11]=ConditionC,
        b[12]=ConditionC,
        b[13]=ConditionC,
        b[14]=ConditionC,
        b[15]=ConditionC,
        out=CBus);

    // Condition for D
    And(a=sel[0], b=sel[1], out=ConditionD);

    // D Bus
    And16(
        a=d[0..15],
        b[0]=ConditionD,
        b[1]=ConditionD,
        b[2]=ConditionD,
        b[3]=ConditionD,
        b[4]=ConditionD,
        b[5]=ConditionD,
        b[6]=ConditionD,
        b[7]=ConditionD,
        b[8]=ConditionD,
        b[9]=ConditionD,
        b[10]=ConditionD,
        b[11]=ConditionD,
        b[12]=ConditionD,
        b[13]=ConditionD,
        b[14]=ConditionD,
        b[15]=ConditionD,
        out=DBus);

    // Fan-in
    Or16(a=ABus, b=BBus, out=aOrB);
    Or16(a=aOrB, b=CBus, out=aOrBorC);
    Or16(a=aOrBorC, b=DBus, out=out);

    // Put your code here:
}